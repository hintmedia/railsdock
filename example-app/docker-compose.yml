version: '3.7'

x-ruby: &ruby-base
  build:
    context: ./docker/ruby
    args:
      - RAILSDOCK_RUBY_VERSION=${RAILSDOCK_RUBY_VERSION}
      - RAILSDOCK_NODE_VERSION=${RAILSDOCK_NODE_VERSION}
      - RAILSDOCK_BUNDLE_JOBS=${BUNDLE_JOBS}
      - RAILSDOCK_BUNDLE_RETRY=${BUNDLE_RETRY}
      - RUBY_UID=${RUBY_UID}
      - RUBY_GID=${RUBY_GID}
  volumes:
    - .:/app:cached
    - gems:/gems
    - node_modules:/app/node_modules
    - packs:/app/public/packs
    - rails_cache:/app/tmp/cache
  tmpfs:
    - /tmp
  user: ruby
  tty: true
  stdin_open: true
  depends_on:
    - redis
    - postgres

volumes:
  redis:
  postgres:
  gems:
  node_modules:
  packs:
  rails_cache:

services:

  rails:
    <<: *ruby-base
    command: rails server -p 3000 -b '0.0.0.0'
    entrypoint: ./docker/ruby/entrypoint.sh
    ports:
      - "${RAILS_SERVER_HOST_PORT}:3000"

  postgres:
    build:
      context: ./docker/postgres
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "${POSTGRES_HOST_PORT}:5432"
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    build:
      context: ./docker/redis
      args:
        - REDIS_VERSION=${REDIS_VERSION}
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - redis:/data